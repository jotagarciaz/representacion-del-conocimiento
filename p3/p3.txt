 cuadricula(X,Y):-
	1=<X, X=<5,
	1=<Y, Y=<5.

ir(cuadricula(X,Y),cuadricula(X,Y)).

ir(cuadricula(X,Y),cuadricula(W,Z)):-
	X < W, 
	X1 is X+1,
	ir(cuadricula(X1,Y),cuadricula(W,Z)).

ir(cuadricula(X,Y),cuadricula(W,Z)):-
	X > W, 
	X1 is X-1,
	ir(cuadricula(X1,Y),cuadricula(W,Z)).

ir(cuadricula(X,Y),cuadricula(W,Z)):-
	Y < Z, 
	Y1 is Y+1,
	ir(cuadricula(X,Y1),cuadricula(W,Z)).

ir(cuadricula(X,Y),cuadricula(W,Z)):-
	Y > Z, 
	Y1 is Y-1,
	ir(cuadricula(X,Y1),cuadricula(W,Z)).

% El estado se compone de tres posiciones, la posicion del robot, de la papelera y la basura.
estado(cuadricula(1,1),cuadricula(1,2), cuadricula(1,3)).

% El robot puede moverse entre las distintas posiciones.
accion(estado(Pos1,Pos2, Pos3), ir(Pos1,Pos4), estado(Pos4, Pos2, Pos3)).
% El robot  puede recoger la basura si esta encima de ella.
accion(estado(Pos1,Pos2, Pos1), recoger, estado(Pos1, Pos2, cargada)).
% El robot  puede soltar la basura si esta cargada y estamos al lado de la papelera.
accion(estado(Pos1,Pos1, cargada), soltar, estado(Pos1, Pos1, en_papelera)).

%% Los planes empiezan en un estado y acaban en otro.

plan(Estado, Estado, []).
plan(Inicio,  Fin, [Accion1|Resto]) :-
    accion(Inicio, Accion1, Estado), plan(Estado,Fin,Resto).

:-plan(estado(cuadricula(1,1),cuadricula(1,2),cuadricula(1,3)),estado(_,_,en_papelera),Plan) ,write(Plan).